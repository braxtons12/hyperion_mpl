name: CMake

on:
  push:
    branches: ["*"]

jobs:
  linux-gcc-x64:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [13, 14]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: seanmiddleditch/gha-setup-ninja@v4

      - name: Install Toolchains PPA
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get -y update

      - name: Install GCC
        run: sudo apt-get -y install gcc-${{matrix.version}} g++-${{matrix.version}}

      - name: Configure
        env:
          CC: gcc-${{matrix.version}}
          CXX: g++-${{matrix.version}}
        working-directory: ${{github.workspace}}
        run: cmake --preset env-cc-release

      - name: Build
        env:
          CC: gcc-${{matrix.version}}
          CXX: g++-${{matrix.version}}
          ACTIONS_STEP_DEBUG: true
        working-directory: ${{github.workspace}}
        run: cmake --build --preset env-cc-release

      - name: Test
        env:
          CC: gcc-${{matrix.version}}
          CXX: g++-${{matrix.version}}
          ACTIONS_STEP_DEBUG: true
        working-directory: ${{github.workspace}}
        run: ctest --preset env-cc-release --verbose

  linux-clang-x64:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [16, 17, 18, 19, 20]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: seanmiddleditch/gha-setup-ninja@v4

      - name: Install LLVM and Clang
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          if [[ ${{matrix.version}} == 20 \
          ]]; then
            sudo ./llvm.sh ${{matrix.version}}
            sudo apt-get install -y clang-tidy-${{matrix.version}}
          else
            sudo apt-get install -y llvm-${{matrix.version}} clang-${{matrix.version}} clang-tidy-${{matrix.version}}
          fi

      - name: Replace clang-tidy
        run: |
          if [[ "$(realpath --canonicalize-existing /usr/bin/clang-tidy-${{matrix.version}})" \
              != "$(realpath --canonicalize-existing /usr/bin/clang-tidy)" \
          ]]; then
            sudo cp /usr/bin/clang-tidy-${{matrix.version}} /usr/bin/clang-tidy -f
          fi

      - name: Configure
        env:
          CC: clang-${{matrix.version}}
          CXX: clang++-${{matrix.version}}
        working-directory: ${{github.workspace}}
        run: |
          rm -rf build
          cmake --preset env-cc-release -DHYPERION_ENABLE_TRACY=ON

      - name: Build
        env:
          CC: clang-${{matrix.version}}
          CXX: clang++-${{matrix.version}}
          ACTIONS_STEP_DEBUG: true
        working-directory: ${{github.workspace}}
        run: cmake --build --preset env-cc-release

      - name: Test
        env:
          CC: clang-${{matrix.version}}
          CXX: clang++-${{matrix.version}}
          ACTIONS_STEP_DEBUG: true
        working-directory: ${{github.workspace}}
        run: ctest --preset env-cc-release --verbose

  windows-msvc-x64:
    runs-on: windows-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: seanmiddleditch/gha-setup-ninja@v4

      - name: Setup scoop
        uses: MinoruSekine/setup-scoop@v2
        with:
          buckets: extras
          scoop_checkup: true
          scoop_update: true
          update_path: true

      - name: Setup MSVC
        uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: x64

      - name: Configure
        working-directory: ${{github.workspace}}
        run: cmake --preset msvc-release -DHYPERION_ENABLE_TRACY=ON
          
      - name: Build
        env:
          ACTIONS_STEP_DEBUG: true
        working-directory: ${{github.workspace}}
        run: cmake --build --preset msvc-release

      - name: Test
        env:
          ACTIONS_STEP_DEBUG: true
        working-directory: ${{github.workspace}}
        run: ctest --preset msvc-release --verbose

  macos-clang-x64:
    runs-on: macos-latest
    strategy:
      matrix:
        version: [16, 17, 18, 19, 20]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: seanmiddleditch/gha-setup-ninja@v4

      - name: Install LLVM
        run: |
          brew install llvm@${{matrix.version}}
          echo "$(brew --prefix llvm@${{matrix.version}})/bin" >> $GITHUB_PATH
          echo "CC=$(brew --prefix llvm@${{matrix.version}})/bin/clang" >> $GITHUB_ENV
          echo "CXX=$(brew --prefix llvm@${{matrix.version}})/bin/clang++" >> $GITHUB_ENV
          echo "LDFLAGS='-L$(brew --prefix llvm@${{matrix.version}})/lib/c++ -Wl,-rpath,$(brew --prefix llvm@${{matrix.version}})/lib/c++'" >> $GITHUB_ENV

      - name: Configure
        working-directory: ${{github.workspace}}
        run: cmake --preset env-cc-release -DHYPERION_ENABLE_TRACY=ON

      - name: Build
        env:
          ACTIONS_STEP_DEBUG: true
        working-directory: ${{github.workspace}}
        run: cmake --build --preset env-cc-release

      - name: Test
        env:
          ACTIONS_STEP_DEBUG: true
        working-directory: ${{github.workspace}}
        run: ctest --preset env-cc-release --verbose
