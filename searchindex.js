Search.setIndex({"docnames": ["concepts", "concepts/comparable", "concepts/operator_able", "concepts/std_supplemental", "genindex", "index", "quick_start", "type_traits", "type_traits/is_comparable", "type_traits/is_operator_able", "type_traits/std_supplemental", "value"], "filenames": ["concepts.rst", "concepts/comparable.rst", "concepts/operator_able.rst", "concepts/std_supplemental.rst", "genindex.rst", "index.rst", "quick_start.rst", "type_traits.rst", "type_traits/is_comparable.rst", "type_traits/is_operator_able.rst", "type_traits/std_supplemental.rst", "value.rst"], "titles": ["hyperion::mpl::concepts", "Comparability Concepts", "Operatorability Concepts", "Standard Supplemental Concepts", "Index", "hyperion::mpl", "Quick Start Guide", "hyperion::mpl::type_traits", "Comparison Operator Detection", "General Operator Detection", "Standard Supplemental Type Traits", "hyperion::mpl::Value"], "terms": {"group": [0, 1, 2, 3, 7, 8, 9, 10, 11], "provid": [0, 3, 7, 8, 9, 10, 11], "an": [0, 2, 5, 6, 7, 9, 11], "assort": [0, 1, 2, 3, 7, 8, 9, 10], "metaprogram": [0, 7, 11], "definit": [0, 1, 2, 3], "us": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], "defin": [0, 3, 10], "variou": [0, 1, 2, 7], "conceptu": 0, "model": 0, "characterist": [0, 7], "type": [0, 1, 2, 3, 7, 8, 9, 11], "some": [0, 7], "ar": [0, 2, 3, 7, 8, 9, 10], "pure": [0, 7], "novel": [0, 3, 7, 10], "compar": [0, 2, 5, 8, 11], "while": [0, 7], "other": [0, 6, 7, 9], "supplement": [0, 5, 7], "less": [0, 1, 3, 8, 10], "stringent": [0, 3, 10], "than": [0, 1, 8], "those": [0, 3, 7, 10], "standard": [0, 5, 7], "do": [0, 7], "someth": [0, 7], "similar": [0, 3, 5, 7, 10], "exist": [0, 3, 7, 9, 10], "": [0, 2, 5, 6, 7, 9, 11], "fill": [0, 3, 7, 10], "gap": [0, 3, 7, 10], "api": [0, 3, 7, 10], "surfac": [0, 3, 7, 10], "were": [0, 7], "overlook": [0, 7], "miss": [0, 7], "reason": [0, 7], "altern": 0, "i": [0, 1, 2, 5, 6, 8, 9, 10, 11], "narrow": 0, "scope": 0, "operator": [0, 5], "comparability_concept": 1, "requir": [1, 2, 6, 8, 9], "wai": [1, 6, 8, 9, 10, 11], "includ": [1, 2, 3, 5, 6, 8, 9, 10, 11], "hyperion": [1, 2, 3, 6, 8, 9, 10], "mpl": [1, 2, 3, 6, 8, 9, 10], "h": [1, 2, 3, 5, 6, 8, 9, 10, 11], "namespac": [1, 2, 3, 5, 8, 9, 10, 11], "struct": [1, 2, 3, 5, 8, 9, 10, 11], "not_compar": [1, 8], "static_assert": [1, 2, 3, 5, 8, 9, 10, 11], "equalitycompar": [1, 8, 11], "int": [1, 2, 3, 5, 8, 9, 10, 11], "variabl": [1, 2, 8, 9, 10, 11], "templat": [1, 2, 5, 8, 9, 10, 11], "typenam": [1, 2, 5, 8, 9, 10, 11], "tlh": [1, 2, 8, 9, 11], "trh": [1, 2, 8, 9, 11], "const": [1, 3, 5, 9, 10, 11], "lh": [1, 2, 11], "rh": [1, 2, 11], "equal": [1, 8, 9, 11], "inequalitycompar": [1, 8, 11], "inequ": [1, 8, 11], "lessthancompar": [1, 8], "lessthanorequalcompar": [1, 8], "greaterthancompar": [1, 8], "greater": [1, 8], "greaterthanorequalcompar": [1, 8], "threewaycompar": [1, 11], "std": [1, 2, 3, 5, 8, 9, 10, 11], "three_way_comparable_with": 1, "three": [1, 8, 11], "doxygenconcept": [1, 2, 3, 11], "cannot": [1, 2, 3, 11], "find": [1, 2, 3, 11], "doxygen": [1, 2, 3, 11], "xml": [1, 2, 3, 11], "output": [1, 2, 3, 11], "project": [1, 2, 3, 6, 11], "from": [1, 2, 3, 6, 11], "directori": [1, 2, 3, 11], "_build": [1, 2, 3, 11], "operatorability_concept": 2, "support": [2, 6, 9, 11], "oper": [2, 3, 5, 7, 10, 11], "not_add": [2, 9], "addabl": [2, 9, 11], "doubl": 2, "unaryplus": [2, 11], "unari": [2, 9, 11], "plu": [2, 11], "unaryminus": [2, 11], "minu": [2, 11], "binarynot": [2, 11], "binari": [2, 6, 9, 11], "booleannot": [2, 11], "boolean": [2, 9, 11], "address": [2, 9], "e": [2, 8, 9], "thi": [2, 6, 9, 11], "true": 2, "It": [2, 5, 6], "rare": 2, "read": 2, "never": 2, "error": 2, "overload": [2, 7, 9], "dereferenc": 2, "is_pointer_v": 2, "arrow": 2, "is_class_v": 2, "remove_pointer_t": 2, "is_union_v": 2, "pointer": [2, 9], "memeb": 2, "thei": 2, "subtract": [2, 9, 11], "multipli": [2, 9, 11], "divid": [2, 9, 11], "binaryand": [2, 11], "andabl": [2, 9, 11], "binaryor": [2, 11], "orabl": [2, 9, 11], "booleanand": [2, 11], "booleanor": [2, 11], "std_supplemental_concept": 3, "These": [3, 10], "gener": [3, 5, 7, 10], "either": [3, 9, 10], "implement": [3, 10], "more": [3, 9, 10], "account": [3, 10], "case": [3, 6, 10], "which": [3, 6, 10], "incompat": [3, 10], "complet": [3, 10], "doesn": [3, 6, 10], "t": [3, 6, 10], "cover": [3, 10], "correspond": 3, "trait": [3, 7, 8, 9, 11], "have": [3, 6, 11], "had": 3, "them": 3, "std_supplement": [3, 10], "trivially_move_but_not_copy": [3, 10], "delet": [3, 10], "default": [3, 6, 9, 10], "auto": [3, 5, 8, 9, 10, 11], "triviallymov": [3, 10], "vector": [3, 10], "c": [5, 8, 9], "20": [5, 8, 9], "meta": 5, "program": 5, "librari": 5, "boost": 5, "hana": 5, "current": 5, "under": 5, "activ": 5, "develop": 5, "ha": [5, 11], "yet": [5, 6], "hit": 5, "stabl": [5, 6], "releas": [5, 6], "point": 5, "see": 5, "guid": 5, "how": 5, "For": [5, 6, 10], "overview": 5, "each": [5, 6], "modul": 5, "link": [5, 6], "left": [5, 8, 9, 11], "sidebar": 5, "below": 5, "exampl": [5, 6], "constexpr": [5, 8, 9, 10, 11], "val1": [5, 11], "4": [5, 11], "val2": [5, 11], "2": [5, 11], "meaning_of_lif": [5, 11], "10_valu": [5, 11], "42": [5, 11], "valuetyp": [5, 11], "tvalu": [5, 11], "add_on": 5, "static": [5, 8, 9, 10, 11], "inlin": [5, 11], "1": 5, "times_two": 5, "2_valu": 5, "appli": 5, "7": 5, "val3": 5, "10": 5, "decltype_": 5, "remove_refer": 5, "remove_const": 5, "add_rvalue_refer": 5, "add_const": 5, "metatyp": 5, "remove_cvref_t": [5, 11], "decltyp": [5, 8, 9, 11], "return": [5, 8, 9, 11], "add_lvalue_refer": 5, "cmake": 5, "xmake": 5, "index": 5, "_valu": [5, 11], "value_of": [5, 11], "is_value_type_v": [5, 11], "is_value_typ": [5, 11], "type_trait": [5, 8, 9, 10], "comparison": [5, 7, 11], "detect": [5, 6, 7], "three_way_compare_result_t": [5, 7, 8], "is_equality_comparable_v": [5, 7, 8], "is_inequality_comparable_v": [5, 7, 8], "is_less_than_comparable_v": [5, 7, 8], "is_less_than_or_equal_comparable_v": [5, 7, 8], "is_greater_than_comparable_v": [5, 7, 8], "is_greater_than_or_equal_comparable_v": [5, 7, 8], "is_three_way_comparable_v": [5, 7, 8], "is_equality_compar": [5, 7, 8], "is_inequality_compar": [5, 7, 8], "is_less_than_compar": [5, 7, 8], "is_less_than_or_equal_compar": [5, 7, 8], "is_greater_than_compar": [5, 7, 8], "is_greater_than_or_equal_compar": [5, 7, 8], "is_three_way_compar": [5, 7, 8], "unary_plus_result_t": [5, 7, 9], "unary_minus_result_t": [5, 7, 9], "binary_not_result_t": [5, 7, 9], "boolean_not_result_t": [5, 7, 9], "address_result_t": [5, 7, 9], "arrow_result_t": [5, 7, 9], "dereference_result_t": [5, 7, 9], "add_result_t": [5, 7, 9], "subtract_result_t": [5, 7, 9], "multiply_result_t": [5, 7, 9], "divide_result_t": [5, 7, 9], "binary_and_result_t": [5, 7, 9], "binary_or_result_t": [5, 7, 9], "boolean_and_result_t": [5, 7, 9], "boolean_or_result_t": [5, 7, 9], "is_unary_plusable_v": [5, 7, 9], "is_unary_minusable_v": [5, 7, 9], "is_binary_notable_v": [5, 7, 9], "is_boolean_notable_v": [5, 7, 9], "is_addressable_v": [5, 7, 9], "is_arrowable_v": [5, 7, 9], "is_dereferencible_v": [5, 7, 9], "is_addable_v": [5, 7, 9], "is_subtractable_v": [5, 7, 9], "is_multipliable_v": [5, 7, 9], "is_dividible_v": [5, 7, 9], "is_binary_andable_v": [5, 7, 9], "is_binary_orable_v": [5, 7, 9], "is_boolean_andable_v": [5, 7, 9], "is_boolean_orable_v": [5, 7, 9], "is_unary_plus": [5, 7, 9], "is_unary_minus": [5, 7, 9], "is_binary_not": [5, 7, 9], "is_boolean_not": [5, 7, 9], "is_address": [5, 7, 9], "is_arrow": [5, 7, 9], "is_dereferenc": [5, 7, 9], "is_add": [5, 7, 9], "is_subtract": [5, 7, 9], "is_multipli": [5, 7, 9], "is_divid": [5, 7, 9], "is_binary_and": [5, 7, 9], "is_binary_or": [5, 7, 9], "is_boolean_and": [5, 7, 9], "is_boolean_or": [5, 7, 9], "is_trivially_movable_v": [5, 7, 10], "is_trivially_mov": [5, 7, 10], "both": [6, 10], "incorpor": 6, "your": 6, "easi": 6, "latform": 6, "easili": 6, "raw": 6, "fetchcont": 6, "method": 6, "like": 6, "add_subdirectori": 6, "cmakelist": 6, "txt": 6, "so": 6, "we": 6, "can": [6, 11], "declar": [6, 10], "depend": 6, "util": 6, "make": [6, 9], "avail": 6, "fetchcontent_declar": 6, "hyperion_mpl": 6, "git_repositori": 6, "http": 6, "github": 6, "com": 6, "braxtons12": 6, "git_tag": 6, "origin": 6, "main": 6, "fetchcontent_makeavail": 6, "creat": [6, 11], "execut": 6, "target": 6, "add_execut": 6, "myexecut": 6, "cmake_current_source_dir": 6, "src": 6, "cpp": 6, "target_link_librari": 6, "privat": 6, "note": 6, "platform": 6, "featur": 6, "macro": 6, "core": 6, "doctest": 6, "test": 6, "option": 6, "traci": 6, "profil": 6, "wrap": 6, "def": 6, "set": 6, "hyperion_enable_traci": 6, "ON": 6, "enabl": 6, "By": 6, "obtain": 6, "you": [6, 9], "disabl": 6, "hyperion_use_fetch_cont": 6, "off": 6, "need": 6, "sure": [6, 9], "packag": 6, "findabl": 6, "via": 6, "find_packag": 6, "new": 6, "er": 6, "lua": 6, "base": 6, "build": 6, "system": 6, "integr": 6, "manag": 6, "prefer": [6, 11], "set_project": 6, "my_project": 6, "add": [6, 11], "hyperion_packag": 6, "git": 6, "repositori": 6, "add_repositori": 6, "add_requir": 6, "don": 6, "verifi": 6, "commit": 6, "necessari": 6, "becaus": 6, "hasn": 6, "reach": 6, "offici": 6, "thu": 6, "track": 6, "allow": 6, "pull": 6, "directli": 6, "head": 6, "fals": [6, 8, 9], "my_execut": 6, "set_kind": 6, "add_packag": 6, "given": [7, 9, 11], "comparison_operator_detect": 8, "determin": [8, 9, 11], "two": [8, 11], "is_compar": 8, "typedef": [8, 9], "result_typ": [8, 9], "alia": [8, 9], "member": [8, 9, 11], "result": [8, 9, 11], "declval": [8, 9], "paramet": [8, 9, 10, 11], "The": [8, 9, 10, 11], "hand": [8, 9, 11], "side": 8, "argument": 8, "right": [8, 9, 11], "valu": [8, 9, 10], "whether": [8, 9, 11], "public": [8, 9, 10, 11], "bool_const": [8, 10, 11], "concept": [8, 10, 11], "false_typ": [8, 9], "In": [8, 9], "addit": [8, 9], "indic": [8, 9], "also": [8, 9], "presenc": [8, 9], "should": [8, 9], "short": [8, 9], "alternaitv": [8, 9], "check": [8, 9, 10, 11], "ani": [8, 9, 10, 11], "g": [8, 9], "sfina": [8, 9], "compat": [8, 9], "context": [8, 9], "claus": [8, 9], "void": [8, 9], "general_operator_detect": 9, "accept": 9, "one": 9, "is_operator_": 9, "invok": 9, "due": 9, "cv": 9, "ref": 9, "qualif": 9, "care": 9, "taken": 9, "ensur": 9, "associ": 9, "correct": 9, "unqualifi": 9, "ttype": [9, 10, 11], "intend": 9, "instanti": 9, "ttype1": 9, "ttype2": 9, "thereof": 9, "multipl": 9, "divis": 9, "derefer": 9, "std_supplemental_trait": 10, "what": 10, "trivial": 10, "movabl": 10, "A": [10, 11], "move": 10, "construct": 10, "assign": 10, "must": [10, 11], "its": [10, 11], "constructor": 10, "user": 10, "explicitli": 10, "similarli": 10, "is_trivially_move_constructible_v": 10, "is_trivially_move_assignable_v": 10, "store": 11, "commun": 11, "work": 11, "calcul": 11, "compil": 11, "time": 11, "function": 11, "char": 11, "tchar": 11, "noexcept": 11, "numer": 11, "liter": 11, "repres": 11, "charact": 11, "maybe_unus": 11, "get": 11, "same_a": 11, "expr": 11, "special": 11, "ttypelh": 11, "ttyperh": 11, "anoth": 11, "rlh": 11, "perform": 11, "notabl": 11, "between": 11, "integral_const": 11, "specifi": 11, "name": 11, "manual": 11, "enforc": 11, "coerc": 11, "order": 11, "forc": 11, "instead": 11, "size_t": 11}, "objects": {"": [[9, 0, 1, "_CPPv4I00E12add_result_t", "add_result_t"], [9, 1, 1, "_CPPv4I00E12add_result_t", "add_result_t::TLhs"], [9, 1, 1, "_CPPv4I00E12add_result_t", "add_result_t::TRhs"], [9, 0, 1, "_CPPv4I0E16address_result_t", "address_result_t"], [9, 1, 1, "_CPPv4I0E16address_result_t", "address_result_t::TLhs"], [9, 0, 1, "_CPPv4I0E14arrow_result_t", "arrow_result_t"], [9, 1, 1, "_CPPv4I0E14arrow_result_t", "arrow_result_t::TLhs"], [9, 0, 1, "_CPPv4I00E19binary_and_result_t", "binary_and_result_t"], [9, 1, 1, "_CPPv4I00E19binary_and_result_t", "binary_and_result_t::TLhs"], [9, 1, 1, "_CPPv4I00E19binary_and_result_t", "binary_and_result_t::TRhs"], [9, 0, 1, "_CPPv4I0E19binary_not_result_t", "binary_not_result_t"], [9, 1, 1, "_CPPv4I0E19binary_not_result_t", "binary_not_result_t::TLhs"], [9, 0, 1, "_CPPv4I00E18binary_or_result_t", "binary_or_result_t"], [9, 1, 1, "_CPPv4I00E18binary_or_result_t", "binary_or_result_t::TLhs"], [9, 1, 1, "_CPPv4I00E18binary_or_result_t", "binary_or_result_t::TRhs"], [9, 0, 1, "_CPPv4I00E20boolean_and_result_t", "boolean_and_result_t"], [9, 1, 1, "_CPPv4I00E20boolean_and_result_t", "boolean_and_result_t::TLhs"], [9, 1, 1, "_CPPv4I00E20boolean_and_result_t", "boolean_and_result_t::TRhs"], [9, 0, 1, "_CPPv4I0E20boolean_not_result_t", "boolean_not_result_t"], [9, 1, 1, "_CPPv4I0E20boolean_not_result_t", "boolean_not_result_t::TLhs"], [9, 0, 1, "_CPPv4I00E19boolean_or_result_t", "boolean_or_result_t"], [9, 1, 1, "_CPPv4I00E19boolean_or_result_t", "boolean_or_result_t::TLhs"], [9, 1, 1, "_CPPv4I00E19boolean_or_result_t", "boolean_or_result_t::TRhs"], [9, 0, 1, "_CPPv4I0E20dereference_result_t", "dereference_result_t"], [9, 1, 1, "_CPPv4I0E20dereference_result_t", "dereference_result_t::TLhs"], [9, 0, 1, "_CPPv4I00E15divide_result_t", "divide_result_t"], [9, 1, 1, "_CPPv4I00E15divide_result_t", "divide_result_t::TLhs"], [9, 1, 1, "_CPPv4I00E15divide_result_t", "divide_result_t::TRhs"], [11, 2, 1, "_CPPv4I_Da0EN8hyperion3mpl5ValueE", "hyperion::mpl::Value"], [11, 1, 1, "_CPPv4I_Da0EN8hyperion3mpl5ValueE", "hyperion::mpl::Value::TType"], [11, 1, 1, "_CPPv4I_Da0EN8hyperion3mpl5ValueE", "hyperion::mpl::Value::TValue"], [11, 2, 1, "_CPPv4I0EN8hyperion3mpl13is_value_typeE", "hyperion::mpl::is_value_type"], [11, 1, 1, "_CPPv4I0EN8hyperion3mpl13is_value_typeE", "hyperion::mpl::is_value_type::TType"], [9, 2, 1, "_CPPv4I00EN8hyperion3mpl11type_traits10is_addableE", "hyperion::mpl::type_traits::is_addable"], [9, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits10is_addableE", "hyperion::mpl::type_traits::is_addable::TLhs"], [9, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits10is_addableE", "hyperion::mpl::type_traits::is_addable::TRhs"], [9, 2, 1, "_CPPv4I0EN8hyperion3mpl11type_traits14is_addressableE", "hyperion::mpl::type_traits::is_addressable"], [9, 1, 1, "_CPPv4I0EN8hyperion3mpl11type_traits14is_addressableE", "hyperion::mpl::type_traits::is_addressable::TLhs"], [9, 2, 1, "_CPPv4I0EN8hyperion3mpl11type_traits12is_arrowableE", "hyperion::mpl::type_traits::is_arrowable"], [9, 1, 1, "_CPPv4I0EN8hyperion3mpl11type_traits12is_arrowableE", "hyperion::mpl::type_traits::is_arrowable::TLhs"], [9, 2, 1, "_CPPv4I00EN8hyperion3mpl11type_traits17is_binary_andableE", "hyperion::mpl::type_traits::is_binary_andable"], [9, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits17is_binary_andableE", "hyperion::mpl::type_traits::is_binary_andable::TLhs"], [9, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits17is_binary_andableE", "hyperion::mpl::type_traits::is_binary_andable::TRhs"], [9, 2, 1, "_CPPv4I0EN8hyperion3mpl11type_traits17is_binary_notableE", "hyperion::mpl::type_traits::is_binary_notable"], [9, 1, 1, "_CPPv4I0EN8hyperion3mpl11type_traits17is_binary_notableE", "hyperion::mpl::type_traits::is_binary_notable::TLhs"], [9, 2, 1, "_CPPv4I00EN8hyperion3mpl11type_traits16is_binary_orableE", "hyperion::mpl::type_traits::is_binary_orable"], [9, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits16is_binary_orableE", "hyperion::mpl::type_traits::is_binary_orable::TLhs"], [9, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits16is_binary_orableE", "hyperion::mpl::type_traits::is_binary_orable::TRhs"], [9, 2, 1, "_CPPv4I00EN8hyperion3mpl11type_traits18is_boolean_andableE", "hyperion::mpl::type_traits::is_boolean_andable"], [9, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits18is_boolean_andableE", "hyperion::mpl::type_traits::is_boolean_andable::TLhs"], [9, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits18is_boolean_andableE", "hyperion::mpl::type_traits::is_boolean_andable::TRhs"], [9, 2, 1, "_CPPv4I0EN8hyperion3mpl11type_traits18is_boolean_notableE", "hyperion::mpl::type_traits::is_boolean_notable"], [9, 1, 1, "_CPPv4I0EN8hyperion3mpl11type_traits18is_boolean_notableE", "hyperion::mpl::type_traits::is_boolean_notable::TLhs"], [9, 2, 1, "_CPPv4I00EN8hyperion3mpl11type_traits17is_boolean_orableE", "hyperion::mpl::type_traits::is_boolean_orable"], [9, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits17is_boolean_orableE", "hyperion::mpl::type_traits::is_boolean_orable::TLhs"], [9, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits17is_boolean_orableE", "hyperion::mpl::type_traits::is_boolean_orable::TRhs"], [9, 2, 1, "_CPPv4I0EN8hyperion3mpl11type_traits17is_dereferencibleE", "hyperion::mpl::type_traits::is_dereferencible"], [9, 1, 1, "_CPPv4I0EN8hyperion3mpl11type_traits17is_dereferencibleE", "hyperion::mpl::type_traits::is_dereferencible::TLhs"], [9, 2, 1, "_CPPv4I00EN8hyperion3mpl11type_traits12is_dividibleE", "hyperion::mpl::type_traits::is_dividible"], [9, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits12is_dividibleE", "hyperion::mpl::type_traits::is_dividible::TLhs"], [9, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits12is_dividibleE", "hyperion::mpl::type_traits::is_dividible::TRhs"], [8, 2, 1, "_CPPv4I00EN8hyperion3mpl11type_traits22is_equality_comparableE", "hyperion::mpl::type_traits::is_equality_comparable"], [8, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits22is_equality_comparableE", "hyperion::mpl::type_traits::is_equality_comparable::TLhs"], [8, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits22is_equality_comparableE", "hyperion::mpl::type_traits::is_equality_comparable::TRhs"], [8, 2, 1, "_CPPv4I00EN8hyperion3mpl11type_traits26is_greater_than_comparableE", "hyperion::mpl::type_traits::is_greater_than_comparable"], [8, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits26is_greater_than_comparableE", "hyperion::mpl::type_traits::is_greater_than_comparable::TLhs"], [8, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits26is_greater_than_comparableE", "hyperion::mpl::type_traits::is_greater_than_comparable::TRhs"], [8, 2, 1, "_CPPv4I00EN8hyperion3mpl11type_traits35is_greater_than_or_equal_comparableE", "hyperion::mpl::type_traits::is_greater_than_or_equal_comparable"], [8, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits35is_greater_than_or_equal_comparableE", "hyperion::mpl::type_traits::is_greater_than_or_equal_comparable::TLhs"], [8, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits35is_greater_than_or_equal_comparableE", "hyperion::mpl::type_traits::is_greater_than_or_equal_comparable::TRhs"], [8, 2, 1, "_CPPv4I00EN8hyperion3mpl11type_traits24is_inequality_comparableE", "hyperion::mpl::type_traits::is_inequality_comparable"], [8, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits24is_inequality_comparableE", "hyperion::mpl::type_traits::is_inequality_comparable::TLhs"], [8, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits24is_inequality_comparableE", "hyperion::mpl::type_traits::is_inequality_comparable::TRhs"], [8, 2, 1, "_CPPv4I00EN8hyperion3mpl11type_traits23is_less_than_comparableE", "hyperion::mpl::type_traits::is_less_than_comparable"], [8, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits23is_less_than_comparableE", "hyperion::mpl::type_traits::is_less_than_comparable::TLhs"], [8, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits23is_less_than_comparableE", "hyperion::mpl::type_traits::is_less_than_comparable::TRhs"], [8, 2, 1, "_CPPv4I00EN8hyperion3mpl11type_traits32is_less_than_or_equal_comparableE", "hyperion::mpl::type_traits::is_less_than_or_equal_comparable"], [8, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits32is_less_than_or_equal_comparableE", "hyperion::mpl::type_traits::is_less_than_or_equal_comparable::TLhs"], [8, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits32is_less_than_or_equal_comparableE", "hyperion::mpl::type_traits::is_less_than_or_equal_comparable::TRhs"], [9, 2, 1, "_CPPv4I00EN8hyperion3mpl11type_traits15is_multipliableE", "hyperion::mpl::type_traits::is_multipliable"], [9, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits15is_multipliableE", "hyperion::mpl::type_traits::is_multipliable::TLhs"], [9, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits15is_multipliableE", "hyperion::mpl::type_traits::is_multipliable::TRhs"], [9, 2, 1, "_CPPv4I00EN8hyperion3mpl11type_traits15is_subtractableE", "hyperion::mpl::type_traits::is_subtractable"], [9, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits15is_subtractableE", "hyperion::mpl::type_traits::is_subtractable::TLhs"], [9, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits15is_subtractableE", "hyperion::mpl::type_traits::is_subtractable::TRhs"], [8, 2, 1, "_CPPv4I00EN8hyperion3mpl11type_traits23is_three_way_comparableE", "hyperion::mpl::type_traits::is_three_way_comparable"], [8, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits23is_three_way_comparableE", "hyperion::mpl::type_traits::is_three_way_comparable::TLhs"], [8, 1, 1, "_CPPv4I00EN8hyperion3mpl11type_traits23is_three_way_comparableE", "hyperion::mpl::type_traits::is_three_way_comparable::TRhs"], [10, 2, 1, "_CPPv4I0EN8hyperion3mpl11type_traits20is_trivially_movableE", "hyperion::mpl::type_traits::is_trivially_movable"], [10, 1, 1, "_CPPv4I0EN8hyperion3mpl11type_traits20is_trivially_movableE", "hyperion::mpl::type_traits::is_trivially_movable::TType"], [9, 2, 1, "_CPPv4I0EN8hyperion3mpl11type_traits18is_unary_minusableE", "hyperion::mpl::type_traits::is_unary_minusable"], [9, 1, 1, "_CPPv4I0EN8hyperion3mpl11type_traits18is_unary_minusableE", "hyperion::mpl::type_traits::is_unary_minusable::TLhs"], [9, 2, 1, "_CPPv4I0EN8hyperion3mpl11type_traits17is_unary_plusableE", "hyperion::mpl::type_traits::is_unary_plusable"], [9, 1, 1, "_CPPv4I0EN8hyperion3mpl11type_traits17is_unary_plusableE", "hyperion::mpl::type_traits::is_unary_plusable::TLhs"], [9, 3, 1, "_CPPv4I00E12is_addable_v", "is_addable_v"], [9, 1, 1, "_CPPv4I00E12is_addable_v", "is_addable_v::TLhs"], [9, 1, 1, "_CPPv4I00E12is_addable_v", "is_addable_v::TRhs"], [9, 3, 1, "_CPPv4I0E16is_addressable_v", "is_addressable_v"], [9, 1, 1, "_CPPv4I0E16is_addressable_v", "is_addressable_v::TLhs"], [9, 3, 1, "_CPPv4I0E14is_arrowable_v", "is_arrowable_v"], [9, 1, 1, "_CPPv4I0E14is_arrowable_v", "is_arrowable_v::TLhs"], [9, 3, 1, "_CPPv4I00E19is_binary_andable_v", "is_binary_andable_v"], [9, 1, 1, "_CPPv4I00E19is_binary_andable_v", "is_binary_andable_v::TLhs"], [9, 1, 1, "_CPPv4I00E19is_binary_andable_v", "is_binary_andable_v::TRhs"], [9, 3, 1, "_CPPv4I0E19is_binary_notable_v", "is_binary_notable_v"], [9, 1, 1, "_CPPv4I0E19is_binary_notable_v", "is_binary_notable_v::TLhs"], [9, 3, 1, "_CPPv4I00E18is_binary_orable_v", "is_binary_orable_v"], [9, 1, 1, "_CPPv4I00E18is_binary_orable_v", "is_binary_orable_v::TLhs"], [9, 1, 1, "_CPPv4I00E18is_binary_orable_v", "is_binary_orable_v::TRhs"], [9, 3, 1, "_CPPv4I00E20is_boolean_andable_v", "is_boolean_andable_v"], [9, 1, 1, "_CPPv4I00E20is_boolean_andable_v", "is_boolean_andable_v::TLhs"], [9, 1, 1, "_CPPv4I00E20is_boolean_andable_v", "is_boolean_andable_v::TRhs"], [9, 3, 1, "_CPPv4I0E20is_boolean_notable_v", "is_boolean_notable_v"], [9, 1, 1, "_CPPv4I0E20is_boolean_notable_v", "is_boolean_notable_v::TLhs"], [9, 3, 1, "_CPPv4I00E19is_boolean_orable_v", "is_boolean_orable_v"], [9, 1, 1, "_CPPv4I00E19is_boolean_orable_v", "is_boolean_orable_v::TLhs"], [9, 1, 1, "_CPPv4I00E19is_boolean_orable_v", "is_boolean_orable_v::TRhs"], [9, 3, 1, "_CPPv4I0E19is_dereferencible_v", "is_dereferencible_v"], [9, 1, 1, "_CPPv4I0E19is_dereferencible_v", "is_dereferencible_v::TLhs"], [9, 3, 1, "_CPPv4I00E14is_dividible_v", "is_dividible_v"], [9, 1, 1, "_CPPv4I00E14is_dividible_v", "is_dividible_v::TLhs"], [9, 1, 1, "_CPPv4I00E14is_dividible_v", "is_dividible_v::TRhs"], [8, 3, 1, "_CPPv4I00E24is_equality_comparable_v", "is_equality_comparable_v"], [8, 1, 1, "_CPPv4I00E24is_equality_comparable_v", "is_equality_comparable_v::TLhs"], [8, 1, 1, "_CPPv4I00E24is_equality_comparable_v", "is_equality_comparable_v::TRhs"], [8, 3, 1, "_CPPv4I00E28is_greater_than_comparable_v", "is_greater_than_comparable_v"], [8, 1, 1, "_CPPv4I00E28is_greater_than_comparable_v", "is_greater_than_comparable_v::TLhs"], [8, 1, 1, "_CPPv4I00E28is_greater_than_comparable_v", "is_greater_than_comparable_v::TRhs"], [8, 3, 1, "_CPPv4I00E37is_greater_than_or_equal_comparable_v", "is_greater_than_or_equal_comparable_v"], [8, 1, 1, "_CPPv4I00E37is_greater_than_or_equal_comparable_v", "is_greater_than_or_equal_comparable_v::TLhs"], [8, 1, 1, "_CPPv4I00E37is_greater_than_or_equal_comparable_v", "is_greater_than_or_equal_comparable_v::TRhs"], [8, 3, 1, "_CPPv4I00E26is_inequality_comparable_v", "is_inequality_comparable_v"], [8, 1, 1, "_CPPv4I00E26is_inequality_comparable_v", "is_inequality_comparable_v::TLhs"], [8, 1, 1, "_CPPv4I00E26is_inequality_comparable_v", "is_inequality_comparable_v::TRhs"], [8, 3, 1, "_CPPv4I00E25is_less_than_comparable_v", "is_less_than_comparable_v"], [8, 1, 1, "_CPPv4I00E25is_less_than_comparable_v", "is_less_than_comparable_v::TLhs"], [8, 1, 1, "_CPPv4I00E25is_less_than_comparable_v", "is_less_than_comparable_v::TRhs"], [8, 3, 1, "_CPPv4I00E34is_less_than_or_equal_comparable_v", "is_less_than_or_equal_comparable_v"], [8, 1, 1, "_CPPv4I00E34is_less_than_or_equal_comparable_v", "is_less_than_or_equal_comparable_v::TLhs"], [8, 1, 1, "_CPPv4I00E34is_less_than_or_equal_comparable_v", "is_less_than_or_equal_comparable_v::TRhs"], [9, 3, 1, "_CPPv4I00E17is_multipliable_v", "is_multipliable_v"], [9, 1, 1, "_CPPv4I00E17is_multipliable_v", "is_multipliable_v::TLhs"], [9, 1, 1, "_CPPv4I00E17is_multipliable_v", "is_multipliable_v::TRhs"], [9, 3, 1, "_CPPv4I00E17is_subtractable_v", "is_subtractable_v"], [9, 1, 1, "_CPPv4I00E17is_subtractable_v", "is_subtractable_v::TLhs"], [9, 1, 1, "_CPPv4I00E17is_subtractable_v", "is_subtractable_v::TRhs"], [8, 3, 1, "_CPPv4I00E25is_three_way_comparable_v", "is_three_way_comparable_v"], [8, 1, 1, "_CPPv4I00E25is_three_way_comparable_v", "is_three_way_comparable_v::TLhs"], [8, 1, 1, "_CPPv4I00E25is_three_way_comparable_v", "is_three_way_comparable_v::TRhs"], [10, 3, 1, "_CPPv4I0E22is_trivially_movable_v", "is_trivially_movable_v"], [10, 1, 1, "_CPPv4I0E22is_trivially_movable_v", "is_trivially_movable_v::TType"], [9, 3, 1, "_CPPv4I0E20is_unary_minusable_v", "is_unary_minusable_v"], [9, 1, 1, "_CPPv4I0E20is_unary_minusable_v", "is_unary_minusable_v::TLhs"], [9, 3, 1, "_CPPv4I0E19is_unary_plusable_v", "is_unary_plusable_v"], [9, 1, 1, "_CPPv4I0E19is_unary_plusable_v", "is_unary_plusable_v::TLhs"], [11, 3, 1, "_CPPv4I0E15is_value_type_v", "is_value_type_v"], [11, 1, 1, "_CPPv4I0E15is_value_type_v", "is_value_type_v::TType"], [9, 0, 1, "_CPPv4I00E17multiply_result_t", "multiply_result_t"], [9, 1, 1, "_CPPv4I00E17multiply_result_t", "multiply_result_t::TLhs"], [9, 1, 1, "_CPPv4I00E17multiply_result_t", "multiply_result_t::TRhs"], [11, 4, 1, "_CPPv4I_DpcEli6_valueDav", "operator&quot;&quot;_value"], [11, 1, 1, "_CPPv4I_DpcEli6_valueDav", "operator&quot;&quot;_value::TChars"], [9, 0, 1, "_CPPv4I00E17subtract_result_t", "subtract_result_t"], [9, 1, 1, "_CPPv4I00E17subtract_result_t", "subtract_result_t::TLhs"], [9, 1, 1, "_CPPv4I00E17subtract_result_t", "subtract_result_t::TRhs"], [8, 0, 1, "_CPPv4I00E26three_way_compare_result_t", "three_way_compare_result_t"], [8, 1, 1, "_CPPv4I00E26three_way_compare_result_t", "three_way_compare_result_t::TLhs"], [8, 1, 1, "_CPPv4I00E26three_way_compare_result_t", "three_way_compare_result_t::TRhs"], [9, 0, 1, "_CPPv4I0E20unary_minus_result_t", "unary_minus_result_t"], [9, 1, 1, "_CPPv4I0E20unary_minus_result_t", "unary_minus_result_t::TLhs"], [9, 0, 1, "_CPPv4I0E19unary_plus_result_t", "unary_plus_result_t"], [9, 1, 1, "_CPPv4I0E19unary_plus_result_t", "unary_plus_result_t::TLhs"], [11, 4, 1, "_CPPv4I_9ValueTypeEIQntNSt7same_asI5TType5ValueIN5TType5valueENSt14remove_cvref_tIDTN5TType5valueEEEEEEEE8value_ofDTN5TType5valueEERK5TType", "value_of"], [11, 4, 1, "_CPPv4I_Da0E8value_ofDT6TValueERK5ValueI6TValue5TTypeE", "value_of"], [11, 1, 1, "_CPPv4I_9ValueTypeEIQntNSt7same_asI5TType5ValueIN5TType5valueENSt14remove_cvref_tIDTN5TType5valueEEEEEEEE8value_ofDTN5TType5valueEERK5TType", "value_of::TType"], [11, 1, 1, "_CPPv4I_Da0E8value_ofDT6TValueERK5ValueI6TValue5TTypeE", "value_of::TType"], [11, 1, 1, "_CPPv4I_Da0E8value_ofDT6TValueERK5ValueI6TValue5TTypeE", "value_of::TValue"], [11, 5, 1, "_CPPv4I_9ValueTypeEIQntNSt7same_asI5TType5ValueIN5TType5valueENSt14remove_cvref_tIDTN5TType5valueEEEEEEEE8value_ofDTN5TType5valueEERK5TType", "value_of::value"], [11, 5, 1, "_CPPv4I_Da0E8value_ofDT6TValueERK5ValueI6TValue5TTypeE", "value_of::value"]]}, "objtypes": {"0": "cpp:type", "1": "cpp:templateParam", "2": "cpp:class", "3": "cpp:member", "4": "cpp:function", "5": "cpp:functionParam"}, "objnames": {"0": ["cpp", "type", "C++ type"], "1": ["cpp", "templateParam", "C++ template parameter"], "2": ["cpp", "class", "C++ class"], "3": ["cpp", "member", "C++ member"], "4": ["cpp", "function", "C++ function"], "5": ["cpp", "functionParam", "C++ function parameter"]}, "titleterms": {"hyperion": [0, 5, 7, 11], "mpl": [0, 5, 7, 11], "concept": [0, 1, 2, 3, 5], "compar": 1, "exampl": [1, 2, 3, 8, 9, 10, 11], "operator": 2, "standard": [3, 10], "supplement": [3, 10], "index": 4, "get": 5, "start": [5, 6], "quick": [5, 6], "refer": 5, "metaprogram": 5, "valu": [5, 11], "type": [5, 10], "trait": [5, 10], "definit": 5, "guid": 6, "cmake": 6, "xmake": 6, "type_trait": 7, "comparison": 8, "oper": [8, 9], "detect": [8, 9], "gener": 9, "requir": [10, 11]}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"hyperion::mpl::concepts": [[0, "hyperion-mpl-concepts"]], "Comparability Concepts": [[1, "comparability-concepts"]], "Example:": [[1, "group__comparability__concepts_1autotoc_md6"], [2, "group__operatorability__concepts_1autotoc_md7"], [3, "group__std__supplemental__concepts_1autotoc_md8"], [8, "group__comparison__operator__detection_1autotoc_md12"], [9, "group__general__operator__detection_1autotoc_md13"], [10, "group__std__supplemental__traits_1autotoc_md14"]], "Operatorability Concepts": [[2, "operatorability-concepts"]], "Standard Supplemental Concepts": [[3, "standard-supplemental-concepts"]], "Index": [[4, "index"]], "hyperion::mpl": [[5, "hyperion-mpl"]], "Getting Started": [[5, null]], "Quick Reference": [[5, null]], "Metaprogramming Value Type": [[5, null]], "Type Traits": [[5, null]], "Concept Definitions": [[5, null]], "Quick Start Guide": [[6, "quick-start-guide"]], "CMake": [[6, "cmake"]], "XMake": [[6, "xmake"]], "hyperion::mpl::type_traits": [[7, "hyperion-mpl-type-traits"]], "Comparison Operator Detection": [[8, "comparison-operator-detection"]], "General Operator Detection": [[9, "general-operator-detection"]], "Standard Supplemental Type Traits": [[10, "standard-supplemental-type-traits"]], "Requirements": [[10, "group__std__supplemental__traits_1autotoc_md9"], [11, "group__value_1autotoc_md17"], [11, "group__value_1autotoc_md18"], [11, "group__value_1autotoc_md19"], [11, "group__value_1autotoc_md20"], [11, "group__value_1autotoc_md21"], [11, "group__value_1autotoc_md22"], [11, "group__value_1autotoc_md23"], [11, "group__value_1autotoc_md24"], [11, "group__value_1autotoc_md25"], [11, "group__value_1autotoc_md26"], [11, "group__value_1autotoc_md27"], [11, "group__value_1autotoc_md28"], [11, "group__value_1autotoc_md29"], [11, "group__value_1autotoc_md30"], [11, "group__value_1autotoc_md31"], [11, "group__value_1autotoc_md32"], [11, "group__value_1autotoc_md33"], [11, "group__value_1autotoc_md16"]], "hyperion::mpl::Value": [[11, "hyperion-mpl-value"]], "Example": [[11, "group__value_1autotoc_md15"]]}, "indexentries": {"hyperion::mpl::type_traits::is_equality_comparable (c++ struct)": [[8, "_CPPv4I00EN8hyperion3mpl11type_traits22is_equality_comparableE"]], "hyperion::mpl::type_traits::is_greater_than_comparable (c++ struct)": [[8, "_CPPv4I00EN8hyperion3mpl11type_traits26is_greater_than_comparableE"]], "hyperion::mpl::type_traits::is_greater_than_or_equal_comparable (c++ struct)": [[8, "_CPPv4I00EN8hyperion3mpl11type_traits35is_greater_than_or_equal_comparableE"]], "hyperion::mpl::type_traits::is_inequality_comparable (c++ struct)": [[8, "_CPPv4I00EN8hyperion3mpl11type_traits24is_inequality_comparableE"]], "hyperion::mpl::type_traits::is_less_than_comparable (c++ struct)": [[8, "_CPPv4I00EN8hyperion3mpl11type_traits23is_less_than_comparableE"]], "hyperion::mpl::type_traits::is_less_than_or_equal_comparable (c++ struct)": [[8, "_CPPv4I00EN8hyperion3mpl11type_traits32is_less_than_or_equal_comparableE"]], "hyperion::mpl::type_traits::is_three_way_comparable (c++ struct)": [[8, "_CPPv4I00EN8hyperion3mpl11type_traits23is_three_way_comparableE"]], "is_equality_comparable_v (c++ member)": [[8, "_CPPv4I00E24is_equality_comparable_v"]], "is_greater_than_comparable_v (c++ member)": [[8, "_CPPv4I00E28is_greater_than_comparable_v"]], "is_greater_than_or_equal_comparable_v (c++ member)": [[8, "_CPPv4I00E37is_greater_than_or_equal_comparable_v"]], "is_inequality_comparable_v (c++ member)": [[8, "_CPPv4I00E26is_inequality_comparable_v"]], "is_less_than_comparable_v (c++ member)": [[8, "_CPPv4I00E25is_less_than_comparable_v"]], "is_less_than_or_equal_comparable_v (c++ member)": [[8, "_CPPv4I00E34is_less_than_or_equal_comparable_v"]], "is_three_way_comparable_v (c++ member)": [[8, "_CPPv4I00E25is_three_way_comparable_v"]], "three_way_compare_result_t (c++ type)": [[8, "_CPPv4I00E26three_way_compare_result_t"]], "add_result_t (c++ type)": [[9, "_CPPv4I00E12add_result_t"]], "address_result_t (c++ type)": [[9, "_CPPv4I0E16address_result_t"]], "arrow_result_t (c++ type)": [[9, "_CPPv4I0E14arrow_result_t"]], "binary_and_result_t (c++ type)": [[9, "_CPPv4I00E19binary_and_result_t"]], "binary_not_result_t (c++ type)": [[9, "_CPPv4I0E19binary_not_result_t"]], "binary_or_result_t (c++ type)": [[9, "_CPPv4I00E18binary_or_result_t"]], "boolean_and_result_t (c++ type)": [[9, "_CPPv4I00E20boolean_and_result_t"]], "boolean_not_result_t (c++ type)": [[9, "_CPPv4I0E20boolean_not_result_t"]], "boolean_or_result_t (c++ type)": [[9, "_CPPv4I00E19boolean_or_result_t"]], "dereference_result_t (c++ type)": [[9, "_CPPv4I0E20dereference_result_t"]], "divide_result_t (c++ type)": [[9, "_CPPv4I00E15divide_result_t"]], "hyperion::mpl::type_traits::is_addable (c++ struct)": [[9, "_CPPv4I00EN8hyperion3mpl11type_traits10is_addableE"]], "hyperion::mpl::type_traits::is_addressable (c++ struct)": [[9, "_CPPv4I0EN8hyperion3mpl11type_traits14is_addressableE"]], "hyperion::mpl::type_traits::is_arrowable (c++ struct)": [[9, "_CPPv4I0EN8hyperion3mpl11type_traits12is_arrowableE"]], "hyperion::mpl::type_traits::is_binary_andable (c++ struct)": [[9, "_CPPv4I00EN8hyperion3mpl11type_traits17is_binary_andableE"]], "hyperion::mpl::type_traits::is_binary_notable (c++ struct)": [[9, "_CPPv4I0EN8hyperion3mpl11type_traits17is_binary_notableE"]], "hyperion::mpl::type_traits::is_binary_orable (c++ struct)": [[9, "_CPPv4I00EN8hyperion3mpl11type_traits16is_binary_orableE"]], "hyperion::mpl::type_traits::is_boolean_andable (c++ struct)": [[9, "_CPPv4I00EN8hyperion3mpl11type_traits18is_boolean_andableE"]], "hyperion::mpl::type_traits::is_boolean_notable (c++ struct)": [[9, "_CPPv4I0EN8hyperion3mpl11type_traits18is_boolean_notableE"]], "hyperion::mpl::type_traits::is_boolean_orable (c++ struct)": [[9, "_CPPv4I00EN8hyperion3mpl11type_traits17is_boolean_orableE"]], "hyperion::mpl::type_traits::is_dereferencible (c++ struct)": [[9, "_CPPv4I0EN8hyperion3mpl11type_traits17is_dereferencibleE"]], "hyperion::mpl::type_traits::is_dividible (c++ struct)": [[9, "_CPPv4I00EN8hyperion3mpl11type_traits12is_dividibleE"]], "hyperion::mpl::type_traits::is_multipliable (c++ struct)": [[9, "_CPPv4I00EN8hyperion3mpl11type_traits15is_multipliableE"]], "hyperion::mpl::type_traits::is_subtractable (c++ struct)": [[9, "_CPPv4I00EN8hyperion3mpl11type_traits15is_subtractableE"]], "hyperion::mpl::type_traits::is_unary_minusable (c++ struct)": [[9, "_CPPv4I0EN8hyperion3mpl11type_traits18is_unary_minusableE"]], "hyperion::mpl::type_traits::is_unary_plusable (c++ struct)": [[9, "_CPPv4I0EN8hyperion3mpl11type_traits17is_unary_plusableE"]], "is_addable_v (c++ member)": [[9, "_CPPv4I00E12is_addable_v"]], "is_addressable_v (c++ member)": [[9, "_CPPv4I0E16is_addressable_v"]], "is_arrowable_v (c++ member)": [[9, "_CPPv4I0E14is_arrowable_v"]], "is_binary_andable_v (c++ member)": [[9, "_CPPv4I00E19is_binary_andable_v"]], "is_binary_notable_v (c++ member)": [[9, "_CPPv4I0E19is_binary_notable_v"]], "is_binary_orable_v (c++ member)": [[9, "_CPPv4I00E18is_binary_orable_v"]], "is_boolean_andable_v (c++ member)": [[9, "_CPPv4I00E20is_boolean_andable_v"]], "is_boolean_notable_v (c++ member)": [[9, "_CPPv4I0E20is_boolean_notable_v"]], "is_boolean_orable_v (c++ member)": [[9, "_CPPv4I00E19is_boolean_orable_v"]], "is_dereferencible_v (c++ member)": [[9, "_CPPv4I0E19is_dereferencible_v"]], "is_dividible_v (c++ member)": [[9, "_CPPv4I00E14is_dividible_v"]], "is_multipliable_v (c++ member)": [[9, "_CPPv4I00E17is_multipliable_v"]], "is_subtractable_v (c++ member)": [[9, "_CPPv4I00E17is_subtractable_v"]], "is_unary_minusable_v (c++ member)": [[9, "_CPPv4I0E20is_unary_minusable_v"]], "is_unary_plusable_v (c++ member)": [[9, "_CPPv4I0E19is_unary_plusable_v"]], "multiply_result_t (c++ type)": [[9, "_CPPv4I00E17multiply_result_t"]], "subtract_result_t (c++ type)": [[9, "_CPPv4I00E17subtract_result_t"]], "unary_minus_result_t (c++ type)": [[9, "_CPPv4I0E20unary_minus_result_t"]], "unary_plus_result_t (c++ type)": [[9, "_CPPv4I0E19unary_plus_result_t"]], "hyperion::mpl::type_traits::is_trivially_movable (c++ struct)": [[10, "_CPPv4I0EN8hyperion3mpl11type_traits20is_trivially_movableE"]], "is_trivially_movable_v (c++ member)": [[10, "_CPPv4I0E22is_trivially_movable_v"]], "hyperion::mpl::value (c++ struct)": [[11, "_CPPv4I_Da0EN8hyperion3mpl5ValueE"]], "hyperion::mpl::is_value_type (c++ struct)": [[11, "_CPPv4I0EN8hyperion3mpl13is_value_typeE"]], "is_value_type_v (c++ member)": [[11, "_CPPv4I0E15is_value_type_v"]], "operator\"\"_value (c++ function)": [[11, "_CPPv4I_DpcEli6_valueDav"]], "value_of (c++ function)": [[11, "_CPPv4I_9ValueTypeEIQntNSt7same_asI5TType5ValueIN5TType5valueENSt14remove_cvref_tIDTN5TType5valueEEEEEEEE8value_ofDTN5TType5valueEERK5TType"], [11, "_CPPv4I_Da0E8value_ofDT6TValueERK5ValueI6TValue5TTypeE"]]}})